<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cy.storejj.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.cy.storejj.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="points" property="points" jdbcType="INTEGER" />
    <result column="points_sum" property="pointsSum" jdbcType="INTEGER" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, nickname, mobile, email, level, points, points_sum, create_by, create_time
  </sql>
  <sql id="Full_Column_List">
    id, name, nickname, mobile, email, account, password, salt, level, points, points_sum, create_by, create_time
  </sql>

  <!-- select -->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Full_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByAccount" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    from user
    where account = #{account, jdbcType=VARCHAR} or mobile = #{account, jdbcType=VARCHAR}
  </select>

  <select id="selectByFilter" resultMap="BaseResultMap" parameterType="map">
    select
    <include refid="Base_Column_List" />
    from user
    <where>
      <if test="account!=null">
        and account like CONCAT('%',#{account},'%')
      </if>
      <if test="mobile!=null">
        and mobile like CONCAT('%',#{mobile},'%')
      </if>
      <if test="name!=null">
        and name like CONCAT('%',#{name},'%')
      </if>
    </where>
    <if test="orderby!=null">
      order by ${orderby}
    </if>
    <if test="orderby == null" >
      order by create_time desc
    </if>
    <if test="page !=null and pagesize !=null">
      limit #{page}, #{pagesize}
    </if>
  </select>
  <select id="countByFilter" resultType="java.lang.Integer" parameterType="map">
    select
    count(id) as ct
    from user
    <where>
      <if test="account!=null">
        and account like CONCAT('%',#{account},'%')
      </if>
      <if test="mobile!=null">
        and mobile like CONCAT('%',#{mobile},'%')
      </if>
      <if test="name!=null">
        and name like CONCAT('%',#{name},'%')
      </if>
    </where>
  </select>
  
  <!-- delete -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <!-- insert -->
  <insert id="insertSelective" parameterType="com.cy.storejj.model.User" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="points != null" >
        points,
      </if>
      <if test="pointsSum != null" >
        points_sum,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="points != null" >
        #{points,jdbcType=INTEGER},
      </if>
      <if test="pointsSum != null" >
        #{pointsSum,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <!-- update -->
  <update id="updateByPrimaryKeySelective" parameterType="com.cy.storejj.model.User" >
    update user
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="points != null" >
        points = #{points,jdbcType=INTEGER},
      </if>
      <if test="pointsSum != null" >
        points_sum = #{pointsSum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>